{
    "openapi": "3.0.0",
    "info": {
        "title": "MyBrand swagger",
        "description": "This is swagger documentation about my MyBrand",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "brownpatience66@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "servers": [{
        "url": "http://localhost:5000"
    }],
    "tags": [{
            "name": "blog",
            "description": "Everything about blogs"
        },
        {
            "name": "user",
            "description": "Operations about user"
        },
        {
            "name": "query",
            "description": "All about queries"
        }
    ],
    "paths": {
        "/api/blogs": {
            "get": {
                "tags": [
                    "blog"
                ],
                "summary": "Returns a list of blogs.",
                "responses": {
                    "200": {
                        "description": "successful operation",

                        "schema": {
                            "$ref": "#/components/schemas/Blog"
                        }


                    }
                }
            },

            "post": {
                "tags": [
                    "blog"
                ],
                "security": [{
                    "bearerAuth": []
                }],
                "summary": "Create a blog",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "$ref": "#/components/schemas/Blog"

                            }
                        }

                    }
                },
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }

        },
        "/api/blogs/{blogId}": {
            "get": {
                "tags": [
                    "blog"
                ],
                "summary": "Find blog by ID",
                "description": "Returns a single blog",
                "operationId": "getBlogById",
                "parameters": [{
                    "name": "blogId",
                    "in": "path",
                    "description": "ID of blog to return",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Blog"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "blog"
                ],
                "security": [{
                    "bearerAuth": []
                }],
                "summary": "Updates a blog ",
                "operationId": "updateblogById",
                "parameters": [{
                    "name": "blogId",
                    "in": "path",
                    "description": "ID of blog that needs to be updated",
                    "required": true,
                    "type": "string"
                }],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "$ref": "#/components/schemas/Blog"

                            }
                        }

                    }
                },
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            },
            "delete": {
                "tags": [
                    "blog"
                ],
                "security": [{
                    "bearerAuth": []
                }],
                "summary": "Deletes a blog",
                "operationId": "deleteBlog",
                "parameters": [{
                        "name": "Authorization",
                        "in": "header",
                        "required": false,
                        "type": "string",
                        "style": "simple",
                        "explode": false
                    },
                    {
                        "name": "blogId",
                        "in": "path",
                        "description": "Blog id to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Blog not found"
                    }
                }
            }
        },
        "/api/queries": {
            "get": {
                "tags": [
                    "query"
                ],
                "summary": "Retrieve all queries",
                "responses": {
                    "200": {
                        "description": "A JSON array of queries",
                        "schema": {
                            "$ref": "#/components/schemas/Query"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "query"
                ],
                "summary": "Create query",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "$ref": "#/components/schemas/Query"

                            }
                        }

                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Query"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },

        "/api/users/register": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create User",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "$ref": "#/components/schemas/User"

                            }
                        }

                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Login user",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "$ref": "#/components/schemas/User"

                            }
                        }

                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/users/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs out current logged in user session",
                "operationId": "logoutUser",
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "user"
                ],
                "security": [{
                    "bearerAuth": []
                }],
                "parameters": [{
                    "name": "authorization",
                    "in": "header",
                    "required": false,
                    "type": "string"
                }],
                "summary": "Retrieve all users",
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                }
            },
            "security": {
                "bearer_auth": []
            }
        },
        "/api/users/{userId}": {
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "operationId": "deleteUser",
                "parameters": [{
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "Blog": {
                "required": [
                    "title",
                    "message",
                    "image"

                ],
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "example": "new blog"
                    },
                    "message": {
                        "type": "string",
                        "description": "blog message",
                        "example": "blog message"
                    },
                    "image": {
                        "type": "file",
                        "description": "blog image"

                    }
                }
            },
            "ApiResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Query": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        },
        "requestBodies": {
            "Blog": {
                "description": "Blog object that needs to be added to the store",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Blog"
                        }
                    }
                },
                "required": true
            },
            "Query": {
                "description": "Query object that needs to be added to the store",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Query"
                        }
                    }
                },
                "required": true
            },
            "UserArray": {
                "description": "List of user object",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "required": true
            }
        },

        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }


        }
    }
}